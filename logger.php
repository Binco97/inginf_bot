<?php
/** This file contains all the logger code
 * Precision of debugging is defined by the constant DEBUGLVL (from 0 to 7)
 * 0 => No debug
 * @todo Define other debug levels
 * 7 => Debug every single update and method (use with caution)
 * Intended use in a function (where $request is the result of the method):
 * if (DEBUGLVL > n) sendDebugRes(__FUNCTION__,$request);
 */
define('DEBUGLVL', 7);
/**
 * @param string $function Name of the function/update
 * @param string $request JSON returned from method/update
 * @return mixed Message sent in the channel
 */
function sendDebugRes($function, $request) {
  //Decodes the $request JSON string into an array
  $res = json_decode($request,true);
  $reply = "<b>$function</b>:\n\n";
  //If a description is set, appends it to the reply string
  $description = (empty($res['description']) === false) ? "\n\nℹ️ <i>" . $res['description'] . "</i> ℹ️" : "";
  //If there are no errors or if $request is an incoming update
  if($res['ok'] == true || $function == "UPDATE") {
    /**If $request has been generated by a function, extracts the message from the field "result"
     * otherwise it gets it directly from the result of the UPDATE
     */
    $msg = (empty($res['result']) === false) ? $res['result'] : $res;
    //Appends a pretty-printed message to $reply
    $reply .= json_encode($msg,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT);
  }
  //If there are some errors getting the results
  else if($res['ok'] == false) {
    //If an error_code is set, appends it to the reply message
    $errcode = (empty($res['error_code']) === false) ? "\n\n<b>❌ Error code:" . $res['error_code'] . "❌</b>" : "";
		$reply = "<b>Result not present!</b>" . $description . $errcode;
	}
  //Sends a message to the debug channel (chatid of the channel declared in private.php file, not present in the repo)
  return sendMessage(DEBUGCHANNEL, $reply);
}
//Warning: sends every single update and every method result to the debug channel
if (DEBUGLVL > 6) sendDebugRes("UPDATE",$content);